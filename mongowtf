#!/usr/bin/python

import sys
import os
import re
import json
import yaml

from collections import OrderedDict

version = '2.6.0'
version_module_data = 'mongo-' + version
script_location = os.path.abspath(os.path.dirname(os.path.realpath(__file__)))
project_data_directory = os.path.join(script_location, 'module_data', version_module_data)
sys.path.append(os.path.join(script_location, 'willitlink'))
from project_browser.data_access import read_project_structure_file, load_willitlink_graph, write_project_structure_file

def print_file_info(project_data, file_name):
    system_object_to_print = OrderedDict()
    file_found = False
    for system_object in project_data:
        module_object_to_print = OrderedDict()
        for module_object in system_object['system_modules']:
            for group_object in module_object['module_groups']:
                if file_name in group_object['group_files']:

                    module_object_to_print['module_title'] = module_object['module_title']
                    module_object_to_print['module_description'] = module_object['module_description']
                    module_object_to_print['module_group'] = group_object

                    system_object_to_print['system_title'] = system_object['system_title']
                    system_object_to_print['system_description'] = system_object['system_description']
                    system_object_to_print['system_module'] = module_object_to_print

                    print yaml.dump(system_object_to_print, indent=4, default_flow_style=False)

                    file_found = True

    if not file_found:
        print "No file with name: " + file_name + " found.  Use the full path to the file starting at the root of the mongodb repo.  Data is based on MongoDB server version: " + version

def main():

    if len(sys.argv) != 2:
        print "Usage: <file_name>"
        exit(1)

    file_name = sys.argv[1]

    project_data = read_project_structure_file(project_data_directory)

    # TODO?
    #graph = load_willitlink_graph(project_data_directory)

    print_file_info(project_data, file_name)

if __name__ == '__main__':
    main()
